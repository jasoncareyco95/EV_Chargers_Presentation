---
title: "Electric Vehicle Charging Station Optimization üöòÔ∏è"
authors:
  - name: "Dr. Henricus Bouwmeester<br>Jason Carey"
    affiliations:
      - name: "Mathematics and Statistics"
  - name: "Dr. Sylvia Brady<br>Hayden Hoffmeister"
    affiliations:
      - name: "Geography, Earth and Atmospheric Sciences"
format: 
  revealjs:
    theme: simple
    transition: slide
    smaller: true
    slide-number: c/t
    title-slide-attributes: 
      data-background-image: presentation_files/images/slide_background.png
      data-background-size: cover
---

```{css, include=FALSE}
.left-align {
  text-align: left !important
}

.right-align {
  text-align: right !important
}
```

```{r, include=FALSE}
#| echo: false

## Load package libraries
library(magrittr)

## Get project data paths
dataset_dir <- fs::dir_ls(paste0(fs::path_wd(), "/presentation_files/data/"))

## Charge stations data path
v_chg_stations <- 
  dataset_dir %>%
  stringr::str_subset("alt_fuel_stations.shp")

## EVs by Market Share data path
v_ev_mkt_share <-
  dataset_dir %>%
  stringr::str_subset("ev_regs_by_mkt_share.csv")

## Colorado Primary and Secondary Roadways
v_co_roads <-
  dataset_dir %>%
  stringr::str_subset("co_roads.shp")

## Failed outcomes by vehicle before models
v_probability_outcomes <-
  dataset_dir %>%
  stringr::str_subset("all_simulations.csv")

## Model suggestions
v_model_suggestions <-
  dataset_dir %>%
  stringr::str_subset("fuel_stations_w_model_outcomes.csv")

## Failed outcomes by vehicle after models
v_phase_2_outcomes <-
  dataset_dir %>%
  stringr::str_subset("phase_2_failed_simulations.csv")

```

# Project Overview {background-image="presentation_files/images/slide_background.png"}

## Context {background-image="presentation_files/images/slide_background.png"}

- If you were interested in financing a new car, specifically an electric vehicle, which would be the most reliable?

- Is the EPA estimated range on the vehicle enough?

- What happens if I run out of charge? Are there enough accessible stations I can get to to recharge?

## Our Goals {background-image="presentation_files/images/slide_background.png"}

- Use semi-realistic conditions in simulated routes taken by electric vehicles to predict possible areas where you may run out of energy

- Apply machine learning models to suggest new charging stations in optimal locations

## Taking Action {background-image="presentation_files/images/slide_background.png"}

- Our predictions are based on multiple factors, including:
  - Characteristics of the top 15 electric vehicles by market share in Colorado, such as:
    - EPA estimated range
    - Plug compatibility (J1772, CCS1, Tesla, CHAdeMO)
  - Pre-existing and planned locations for charging stations
  - Availability of charging stations based on the number of charging ports at each station and random interarrival times of consumers
  - Zoning restrictions within cities and counties where predictions are located
  - Electric grid capacity at prediction locations

# Data {background-image="presentation_files/images/slide_background.png"}

## Inbound Sources {background-image="presentation_files/images/slide_background.png"}

The data used to run our simulations and create a foundation for our models is collected from the following locations:

- Electric Vehicle Charging Stations
    - US Department of Energy - Alternative Fuels Data Center: [Charging Stations](https://afdc.energy.gov/stations/#/analyze?region=US-CO&country=US&fuel=ELEC&ev_levels=all&status=E&status=P)

- Colorado Electric Vehicle Registration Data
    - Atlas EV Hub^[Hosts the data originally collected by the Colorado Energy Office<br>_] / Colorado Energy Office: [EV Registrations](https://www.atlasevhub.com/materials/state-ev-registration-data/#data)

- Colorado Primary and Secondary Roadways
    - US Census Bureau: [Roadways](https://www.census.gov/cgi-bin/geo/shapefiles/index.php?year=2021&layergroup=Roads)
    
::: aside
:::

## Electric Vehicle Charging Stations {background-image="presentation_files/images/slide_background.png"}

- Our charging stations data table consists of the following features giving us insights into characteristics of each publicly available charging station in the state

```{r}
#| echo: false

d_chg_stations <-
  v_chg_stations %>%
  sf::read_sf() %>%
  sf::st_drop_geometry() %>%
  head(n = 6)

d_chg_stations_gt <-
  d_chg_stations %>%
  gt::gt() %>%
  gt::tab_header(title = "Public Charging Station Locations in Colorado") %>%
  gt::cols_label(
    street_add = "Address",
    city = "City",
    state = "State",
    zip = "ZIP",
    l1_ports = "Level 1 Ports",
    l2_ports = "Level 2 Ports",
    l3_ports = "DC Fast Charge Ports",
    sum_ports = "Total Ports",
    ev_network = "Charging Network",
    longitude = "Longitude",
    latitude = "Latitude",
    ev_sockets = "Compatible Sockets"
  ) %>%
  gt::tab_footnote(
    footnote = "Data shows first 6 of 1,698 station locations, with the data last collected on February 3rd, 2023"
  ) %>%
  gt::as_raw_html()

d_chg_stations_gt

```

## Electric Vehicle Sockets {background-image="presentation_files/images/slide_background.png"}

:::: {.columns}

::: {.column width="60%"}
- When setting up our simulations we determine which vehicle is going to be used and filter the charging station table to compatible stations

- To accomplish this, we've encoded socket compatibility with the map shown:

- *Note*: We ignore NEMA520 and NEMA515 plugs because none of the top 15 electric vehicles by market share have compatibility with these sockets^[And they make up a fraction of overall station locations!<br>_]
:::

::: {.column width="40%"}
```{r}
#| echo: false

d_ev_sockets <- 
  dplyr::tibble(
    socket_type = c("CCS1", "J1772", "Tesla", "CHAdeMO"),
    value = c(1:4)
  )

d_ev_sockets_gt <- 
  d_ev_sockets %>%
  gt::gt(rowname_col = "socket_type") %>%
  gt::tab_header(title = "Socket Compatibility Map") %>%
  gt::tab_stubhead(label = "Socket Type") %>%
  gt::cols_label(value = "Value") %>%
  gt::as_raw_html()

d_ev_sockets_gt

```
:::

::: aside
:::

::::

## Colorado Electric Vehicle Registration Data {background-image="presentation_files/images/slide_background.png"}

:::: {.columns}

::: {.column width="40%"}
- Exploring the electric vehicle registration data for Colorado we determined that the 15 vehicles shown would be used in our simulations

- *Note*: Socket/plug compatibility is also included in this table for our simulations, however, is omitted here for clarity
:::

::: {.column width="60%"}
```{r}
#| echo: false

d_ev_mkt_share <-
  v_ev_mkt_share %>%
  readr::read_csv(show_col_types = FALSE) %>%
  dplyr::select(-sockets) %>%
  dplyr::mutate(mkt_share = mkt_share / 100) 

d_ev_mkt_share_gt <-
  d_ev_mkt_share %>%
  gt::gt(rowname_col = "index") %>%
  gt::tab_header(title = "Electric Vehicles in Colorado by Market Share") %>%
  gt::cols_label(
    vehicle_make = "Manufacturer",
    vehicle_model = "Model",
    range = "Range",
    mkt_share = "Market Share (%)"
  ) %>%
  gt::tab_footnote("Based on active registrations with the DMV as of February 1st, 2023") %>%
  gt::fmt_integer(range) %>%
  gt::fmt_percent(mkt_share) %>%
  gt::as_raw_html()

d_ev_mkt_share_gt

```
:::

::::

## Colorado Primary and Secondary Roadways {background-image="presentation_files/images/slide_background.png"}

- We reference TIGER/Line Shapefiles for when we make adjustments to our machine learning model suggestions 

- These adjustments ensure that model suggestions are in valid locations along a primary or secondary roadways

## Outbound Schema {background-image="presentation_files/images/slide_background.png"}

- After running the simulations, a schema has been created using the vehicle number and seed of the simulation number as keys to link all associated records

:::: {.columns}

::: {.column width="40%"}
- The data frames in this schema include:
  - Route details
  - Charging station uses
  - Vehicle information
  - Simulation outcomes
  
- This is a sample of our simulation outcomes table, where 0 is a successful trip and 1 is unsuccessful
:::

::: {.column width="60%"}
```{r}
#| echo: false

d_outcome_schema <-
  v_probability_outcomes %>%
  readr::read_csv(
    show_col_types = FALSE, 
    col_select = vehicle:outcome
  ) %>%
  dplyr::arrange(vehicle) %>%
  head(n = 6)

d_outcome_schema_gt <-
  d_outcome_schema %>%
  gt::gt(rowname_col = "vehicle") %>%
  gt::tab_header(title = "Outcomes of Simulated Routes by Vehicle") %>%
  gt::cols_label(
    seed = "Seed",
    start_point = "Starting Position",
    end_point = "Ending Position",
    distance = "Distance (m)",
    outcome = "Simulation Outcome"
  ) %>%
  gt::tab_footnote("Data shows first 6 of 166,725 simulated routes across 15 vehicle models") %>%
  gt::fmt_integer(distance) %>%
  gt::as_raw_html()

d_outcome_schema_gt

```
:::

::::

# Methodology {background-image="presentation_files/images/slide_background.png"}

## Vehicles {background-image="presentation_files/images/slide_background.png"}

- Our project takes a vehicle specific approach to generating new charging station suggestions

- Each electric vehicle has specific characteristics such as range, socket compatibility, build quality, estimated useful battery life, etc

- A universal model would be too general to suggest meaningful station locations for the consumer of these vehicles because of the diversity in each model

## Route Generation {.incremental background-image="presentation_files/images/slide_background.png"}

:::: {.columns}

::: {.column width="60%"}

::: {.incremental}
- Routes created by our model adhere to a few constraints:
  - They must exceed the range of the vehicle being simulated
  - They must stay within Colorado

- Routes also attempt to mimic population density with:
  - 60% of routes originating from the Greater Denver Metropolitan Area
  - 35% of routes originating from the Greater Front Range (Colorado Springs to Fort Collins)
  - 5% of routes originating from anywhere within Colorado
  
- Avoiding situations where outcomes could be 'false positives' by using charging stations outside of Colorado was critical
:::

:::

::: {.column width="40%"}

:::

::::

## Route Simulation {background-image="presentation_files/images/slide_background.png"}

::: {.incremental}

- Simulations attempt to mimic semi-realistic conditions by following these steps:
  - Select a randomized starting position within our starting polygons
  - Select a randomized ending position at *least* the range of the vehicle away from the starting position
  - Create a connecting route between the two points
  - Begin 'driving' by reducing the vehicle's battery according to the distance traveled
  - At 30% battery capacity locate the closest charging stations and determine if they are **available**:
    - We use a Poisson distribution generation function to determine if based on random arrivals the number of plugs at the station are full or if at least one is available for use
  - If there are plugs available re-route to the station and recharge to **80%** battery capacity^[We recharge to 80% capacity because charging above 80% negatively impacts the useful life of the battery in the vehicle<br>_]
  - Once recharged, continue to our destination before turning around and repeating the same process on the way back to the starting position

:::

::: aside
:::

## Poisson Distribution {auto-animate="true" background-image="presentation_files/images/slide_background.png"}

- A distribution used to model the probability of an event occurring given the number of events that will occur, and the average occurrence rate ($\lambda$) over a period of time

:::: {.columns}

::: {.column width="40%"}

- Mathematically expressed as<br>
$P\left(x, \lambda\right) = \frac{{e^{ - \lambda } \lambda ^x }}{{x!}}$ for $x = 0, 1, 2, ...$

- We can plot what this may look like over $n = 30$ events using the following code:

```{r}
#| echo: fenced

## How many events will occur?
events <- c(0:30)

## Probability Mass Function
pmf <- dpois(x = events, lambda = 8)

## Make a data frame
pmf_df <- data.frame(events, pmf)

## Plot the Poisson Distribution
p <- ggplot2::ggplot(
  data = pmf_df, 
  mapping = ggplot2::aes(
    x = events,
    y = pmf
  )) + 
  ggplot2::geom_point() +
  ggplot2::geom_line() +
  ggplot2::labs(
    title = "Poisson Distribution",
    subtitle = "With x = 30, lambda = 8",
    x = "Events",
    y = "Probability"
  ) +
  ggplot2::theme_light()

```
:::

::: {.column width="60%"}

```{r}
#| echo: false

p

```

:::
::::

## Initial Incomplete Trips {background-image="presentation_files/images/slide_background.png"}

:::: {.columns}

::: {.column width="40%"}
- Each vehicle was subjected to approximately 20,000 simulated trips

- A large number of simulations ensured that there were enough failures to create meaningful clusters for modeling
:::

::: {.column width="60%"}
```{r}
#| echo: false

d_initial_outcomes <-
  v_probability_outcomes %>%
  readr::read_csv(
    show_col_types = FALSE, 
    col_select = vehicle:outcome
  ) %>%
  dplyr::group_by(vehicle) %>%
  dplyr::summarise(
    simulations = dplyr::n(),
    num_failed = sum(outcome),
    prop_failed = (num_failed / simulations),
    .groups = "drop"
  ) %>%
  dplyr::arrange(dplyr::desc(prop_failed)) %>%
  dplyr::left_join(
    y = d_ev_mkt_share %>%
      dplyr::select(
        index, 
        vehicle_make, 
        vehicle_model
      ),
    by = c("vehicle" = "index")
  ) %>%
  dplyr::select(
    vehicle_make, 
    vehicle_model, 
    dplyr::everything(),
    -vehicle
  )

d_initial_outcomes_gt <-
  d_initial_outcomes %>%
  gt::gt() %>%
  gt::tab_header(title = "Overall Simulated Trip Performance by Vehicle") %>%
  gt::cols_label(
    vehicle_make = "Manufacturer",
    vehicle_model = "Model",
    simulations = "Trips",
    num_failed = "Number Failed",
    prop_failed = "Failure Percentage"
  ) %>%
  gt::tab_footnote("Hyundai Kona Electric simulations were truncated by 2,223 because of a software related issue") %>%
  gt::fmt_integer(c(simulations, num_failed)) %>%
  gt::fmt_percent(prop_failed) %>%
  gt::as_raw_html()

d_initial_outcomes_gt

```
:::

::::

## Models {background-image="presentation_files/images/slide_background.png"}

- We leverage the following two machine learning models

:::: {.columns}

::: {.column width="50%"}

- K-Means Clustering

:::

::: {.column width="50%"}

- Affinity Propagation

:::

::::

## New Stations {background-image="presentation_files/images/slide_background.png"}

:::: {.columns}

::: {.column width="40%"}
- For each vehicle, our models created suggestions of where to construct new charging stations based on the centroids of each cluster of simulation failures

- We attempted to validate these suggestions by shifting them to the closest primary or secondary roadways
:::

::: {.column width="60%"}
```{r}
#| echo: false

d_model_suggestions <-
  v_model_suggestions %>%
  readr::read_csv(
    col_select = 2:dplyr::last_col(),
    show_col_types = FALSE 
  ) %>%
  dplyr::filter(!is.na(vehicle)) %>% 
  dplyr::group_by(
    street_add,
    vehicle
  ) %>%
  dplyr::summarise(
    suggestions = dplyr::n(),
    .groups = "drop"
  ) %>%
  tidyr::pivot_wider(
    names_from = street_add,
    values_from = suggestions
  ) %>%
  dplyr::left_join(
    y = d_ev_mkt_share %>%
      dplyr::select(
        index, 
        vehicle_make, 
        vehicle_model
      ),
    by = c("vehicle" = "index")
  ) %>%
  dplyr::select(
    vehicle_make, 
    vehicle_model,
    `KMeans Model`,
    `AP Model`
  ) %>%
  janitor::clean_names()

d_model_suggestions_gt <-
  d_model_suggestions %>%
  gt::gt() %>%
  gt::tab_header(title = "Model Suggestions by Vehicle") %>%
  gt::cols_label(
    vehicle_make = "Manufacturer",
    vehicle_model = "Model",
    k_means_model = "K-Means Suggestions",
    ap_model = "Affinity Propagation Suggestions"
  ) %>%
  gt::fmt_integer(c(k_means_model, ap_model)) %>%
  gt::as_raw_html()

d_model_suggestions_gt

```
:::

::::

## Final Incomplete Trips {background-image="presentation_files/images/slide_background.png"}

- After incorporating the validated affinity propagation suggestions into our fuel stations data, we retried the simulations that failed to see if there was a change

```{r}
#| echo: false

d_phase_2_outcomes <-
  v_phase_2_outcomes %>%
  readr::read_csv(
    col_select = 2:3,
    show_col_types = FALSE 
  ) %>%
  dplyr::group_by(
    vehicle
  ) %>%
  dplyr::summarise(
    num_failed_am = dplyr::n(),
    .groups = "drop"
  ) %>%
  tidyr::complete(
    vehicle = 1:15,
    fill = list(num_failed_am = 0)
  ) %>%
  dplyr::left_join(
    y = d_ev_mkt_share %>%
      dplyr::select(
        index, 
        vehicle_make, 
        vehicle_model
      ),
    by = c("vehicle" = "index")
  ) %>%
  dplyr::left_join(
    y = d_initial_outcomes,
    by = c("vehicle_make", "vehicle_model")
  ) %>%
  dplyr::mutate(
    p_failed_am = num_failed_am / simulations
  ) %>%
  dplyr::select(
    vehicle_make, 
    vehicle_model,
    simulations,
    num_failed_bm = num_failed,
    p_failed_bm = prop_failed,
    num_failed_am,
    p_failed_am
  ) %>%
  dplyr::arrange(
    ## Just for you Kyle ;)
    -p_failed_bm,
    -p_failed_am
  )

d_phase_2_gt <-
  d_phase_2_outcomes %>%
  gt::gt() %>%
  gt::tab_header(title = "Vehicle Outcomes After Incorporating Model Suggestions") %>%
  gt::cols_label(
    vehicle_make = "Manufacturer",
    vehicle_model = "Model",
    simulations = "Simulations",
    num_failed_bm = "Original Failures",
    p_failed_bm = "Original Failure Percentage",
    num_failed_am = "New Failures",
    p_failed_am = "New Failure Percentage"
  ) %>%
  gt::fmt_integer(c(simulations, num_failed_bm, num_failed_am)) %>%
  gt::fmt_percent(c(p_failed_bm, p_failed_am)) %>%
  gt::as_raw_html()

d_phase_2_gt

```
:::

::::

# Results {background-image="presentation_files/images/slide_background.png"}

## Outcome Analysis {background-image="presentation_files/images/slide_background.png"}

- Were our model's suggestions statistically significant?

:::: {.columns}
::: {.column width="50%"}

```{r}
#| echo: true

## Vehicles to test
vehicles <- c(1:15)

## Data frame of results
d_test_results <-
  vehicles %>%
  purrr::map_dfr(
    .f = ~{
      
      ## Get vehicle record
      vr <- 
        d_phase_2_outcomes %>%
        dplyr::slice(.x)
      
      ## Test results
      tr <- prop.test(
        x = c(vr$num_failed_bm[1], vr$num_failed_am[1]), 
        n = c(vr$simulations[1], vr$simulations[1]),
        alternative = "two.sided",
        conf.level = .99
      )
      
      ## Collect values
      res <- 
        vr %>%
        dplyr::select(
          vehicle_make,
          vehicle_model
        ) %>%
        dplyr::mutate(
          x_squared = tr$statistic,
          p_value = tr$p.value
        )
      
    }
  )
```
:::

::: {.column width="50%"}

```{r}
#| echo: false

d_test_results_gt <-
  d_test_results %>%
  gt::gt() %>%
  gt::tab_header(title = "Vehicle Outcomes After Incorporating Model Suggestions") %>%
  gt::cols_label(
    vehicle_make = "Manufacturer",
    vehicle_model = "Model",
    x_squared = "Chi-Squared Test Statistic",
    p_value = "P-Value"
  ) %>%
  gt::fmt_number(x_squared) %>%
  gt::fmt_scientific(p_value) %>%
  gt::as_raw_html()

d_test_results_gt

```
:::
::::

# Future Enhancements {background-image="presentation_files/images/slide_background.png"}

## Future Features {background-image="presentation_files/images/slide_background.png"}

- In future iterations of this project we aim to enhance our simulation conditions:
  - Elevation should factor into energy consumption
  - Weather and temperature likely have an adverse effect on range
  - Add route variation such as loops, instead of out and back trips
  
- We also plan to research more into the cost of removing inefficient station locations in favor of consolidating ports with minimal network reliability impact

# Conclusion {background-image="presentation_files/images/slide_background.png"}

## Achievements {background-image="presentation_files/images/slide_background.png"}

- Using our simulation algorithm we were able to reduce the number of failed trips by suggesting the fewest necessary charging stations in key locations

- The largest reduction was from the Nissan Leaf from 2,339 failed trips to 78 failed trips over 20,007 simulations

## Closing Statements {background-image="presentation_files/images/slide_background.png"}

- Thanks for listening!

- Send us an email ‚úâÔ∏è
  - jcarey9@msudenver.edu